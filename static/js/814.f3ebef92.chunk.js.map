{"version":3,"file":"static/js/814.f3ebef92.chunk.js","mappings":"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","sources":["components/Contact/Contact.jsx","redux/selectors.js","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/ContactsForm/ContactsForm.jsx","pages/Contacts.js"],"sourcesContent":["// import { Button, Span, ContactBox } from \"./Contact.styled\"\nimport { deleteContact } from \"../../redux/operations\"\nimport { useDispatch } from \"react-redux\";\nimport { Button, Text, Box } from \"@chakra-ui/react\";\n\nconst Contact = ({contact}) => {\n    const dispatch = useDispatch();\n    const handleDelete = () => dispatch(deleteContact(contact.id));\n    return (\n        <Box mb=\"8px\" display='flex' justifyContent={\"space-between\"} width={\"100%\"}>\n            <Text fontSize=\"lg\">{contact.name}: {contact.number}</Text>\n            \n            <Button type=\"button\" onClick={handleDelete} colorScheme=\"teal\" mb=\"4px\" variant=\"outline\" >Delete</Button> \n        </Box>\n    )\n}\n\nexport default Contact","// import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter\n\n// export const selectVisibleContacts = createSelector(\n//   [selectContacts, selectFilter],\n//   (contacts, filterStatus) => {\n//     if (filterStatus === '') {\n//       return contacts\n//     } else {\n//        return contacts.filter(({ name }) =>\n//       name.includes(filterStatus)\n//     );\n//     }\n//   }\n// );\n","import React from \"react\";\n// import { ContactsUl, ContactItem } from \"./ContactList.styled\"\nimport Contact from \"../Contact/Contact\"\nimport { selectContacts, selectFilter } from '../../redux/selectors'\nimport { useSelector } from \"react-redux\"\nimport { ListItem, List, ListIcon } from '@chakra-ui/react'\nimport {HiPhone} from \"react-icons/hi\"\n \n\n\nfunction ContactList() {\n    const contacts = useSelector(selectContacts)\n    const filterStatus = useSelector(selectFilter)\n    const visibleContacts = contacts.filter((contact) => contact.name.toLowerCase().includes(filterStatus.toLowerCase()))\n    \n    return (\n            <List spacing={3}>\n                {visibleContacts.map(contact  => (\n                    <ListItem key={contact.id} display={\"flex\"} borderBottom=\"1px\" borderColor=\"teal\" width={\"100%\"}>\n                    \n                        <ListIcon as={HiPhone} color='teal' boxSize=\"1.5em\" mr=\"8px\" />\n                        <Contact contact={contact}  />    \n                    </ListItem>    \n                ))}\n            </List>\n        )\n    \n\n}\n\n\nexport default ContactList","import React from \"react\";\n// import { Label } from \"./Filter.styled\"\n// import { Input } from \"../ContactsForm/ContactForm.styled\"\nimport { useDispatch } from \"react-redux\"\nimport { setFilter } from \"../../redux/filterSlice\"\nimport { FormLabel, Input, Text } from \"@chakra-ui/react\";\n\n\nexport const Filter = () => {\n    const dispatch = useDispatch()\n        \n    const filterChangeHandler = (event) => {\n        dispatch(setFilter(event.target.value))\n    }\n\n\n    return <FormLabel>\n        <Text fontSize=\"xl\" mb=\"16px\">Find contacts by name</Text>\n        <Input\n            type=\"text\"\n            name=\"filter\"\n            onChange={filterChangeHandler}\n            mb=\"16px\"\n        />\n        </FormLabel>\n}\n\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { addContact } from \"../../redux/operations\"\nimport { selectContacts } from \"redux/selectors\";\nimport { Button, Input, FormLabel, FormControl, Box, Heading } from \"@chakra-ui/react\";\n\nconst ContactsForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts)\n\n  \n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const form = event.target;\n    const newContact = {\n      name: form.elements.name.value,\n      number: form.elements.number.value\n    }\n    \n    if (contacts.find(contact => contact.name === newContact.name)) {\n      alert(`${newContact.name} is already in contacts`);\n      form.reset();\n      return;\n    }\n    \n      dispatch(addContact(newContact))\n      form.reset();\n      \n    }\n      \n  return (\n    <Box>\n      <Heading as=\"h2\" fontSize=\"2xl\" textAlign={\"center\"} mb=\"24px\">Add a new contact</Heading>\n      <form onSubmit={handleSubmit}>\n        <FormControl>\n        <FormLabel fontSize=\"lg\" mb=\"16px\">\n          Name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            \n          />\n        </FormLabel>\n        <FormLabel fontSize=\"lg\" mb=\"16px\">\n          Number\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            \n          />\n        </FormLabel>\n        <Button type=\"submit\" colorScheme=\"teal\" mb=\"36px\" display={\"block\"} ml=\"auto\" mr=\"auto\" >Add contact</Button>\n        </FormControl>\n        \n      </form>\n      \n    </Box>\n      \n    )\n    \n  }\n\nexport default ContactsForm\n\n","import  ContactList  from \"../components/ContactList/ContactList\"\nimport { Filter } from \"../components/Filter/Filter\"\nimport ContactsForm from \"../components/ContactsForm/ContactsForm\"\n// import { Section, Container, Title } from \"../components/section.styled\"\nimport { Outlet } from 'react-router-dom'\nimport { useDispatch } from \"react-redux\"\nimport { useEffect } from \"react\"\nimport { fetchContacts } from \"redux/operations\"\nimport {Box, Heading, Text} from \"@chakra-ui/react\"\nimport { useSelector } from 'react-redux';\nimport { authSelectors } from 'redux/auth';\nimport { selectContacts } from \"redux/selectors\"\n\n\n\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const name = useSelector(authSelectors.selectUserName)\n  const contacts = useSelector(selectContacts)\n \n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n// const isLoggedIn = useSelector(authSelectors.selectIsLoggedIn)\n  return (\n    <Box as=\"section\" p=\"8px\">\n        <Box>\n        <Heading as=\"h1\" fontSize=\"4xl\" textAlign={\"center\"} mb=\"24px\">{name}'s phonebook</Heading>\n          <ContactsForm/>\n      </Box>\n      {contacts.length === 0\n        ? <Text fontSize={\"lg\"} as=\"b\">\n            There is no contacts in your phonebook.<br /> Please add a new contact\n          </Text>\n        : ( \n        <Box>\n        <Heading as=\"h2\" fontSize=\"2xl\" textAlign={\"center\"} mb=\"24px\">Contacts</Heading>\n          {/* {isLoading && <p>Loading tasks...</p>} */}\n          {/* {error && <p>{error}</p>} */}\n          <Filter />\n          <ContactList />\n          \n      </Box>\n      )}\n        \n      <Outlet />\n    </Box>\n    \n  )\n}\n\n"],"names":["contact","dispatch","useDispatch","mb","display","justifyContent","width","fontSize","name","number","type","onClick","deleteContact","id","colorScheme","variant","selectContacts","state","contacts","items","selectFilter","filter","useSelector","filterStatus","visibleContacts","toLowerCase","includes","spacing","map","borderBottom","borderColor","as","HiPhone","color","boxSize","mr","Filter","onChange","event","setFilter","target","value","textAlign","onSubmit","preventDefault","form","newContact","elements","find","alert","reset","addContact","pattern","title","ml","Contacts","authSelectors","useEffect","fetchContacts","p","length"],"sourceRoot":""}