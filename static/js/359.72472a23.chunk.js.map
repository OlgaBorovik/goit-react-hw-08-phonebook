{"version":3,"file":"static/js/359.72472a23.chunk.js","mappings":"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","sources":["components/ContactList/ContactList.styled.jsx","components/Contact/Contact.styled.jsx","components/Contact/Contact.jsx","redux/selectors.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/ContactsForm/ContactForm.styled.jsx","components/Filter/Filter.jsx","components/ContactsForm/ContactsForm.jsx","components/section.styled.jsx","pages/Contacts.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const ContactsUl = styled.ul`\ndisplay: flex;\nflex-direction: column;\npadding:0;\n`\nexport const ContactItem = styled.li`\nborder-bottom: 1px solid black;\n\nmargin-bottom: 12px;\npadding: 8px;\n\n`","import styled from \"styled-components\";\n\nexport const ContactBox = styled.div`\ndisplay: flex;\nflex-direction: row;\njustify-content: space-between;\n\n`\n\nexport const Button = styled.button`\nwidth: 80px;\nheight: 30px;\nborder-radius: 5px;\nborder:none;\nbackground-color: lightblue;\nfont-size: 14px;\n&:hover{\n    background-color: blue;\n    color: white;\n}\n`\nexport const Span = styled.span`\nfont-size: 16px;\nfont-weight: 700;\n`","import { Button, Span, ContactBox } from \"./Contact.styled\"\nimport { deleteContact } from \"../../redux/operations\"\nimport { useDispatch } from \"react-redux\";\n\n\nconst Contact = ({contact}) => {\n    const dispatch = useDispatch();\n    const handleDelete = () => dispatch(deleteContact(contact.id));\n    return (\n        <ContactBox>\n            <Span>{contact.name}: {contact.number}</Span>\n            <Button type=\"button\" onClick={handleDelete}>Delete</Button> \n        </ContactBox>\n    )\n}\n\nexport default Contact","// import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter\n\n// export const selectVisibleContacts = createSelector(\n//   [selectContacts, selectFilter],\n//   (contacts, filterStatus) => {\n//     if (filterStatus === '') {\n//       return contacts\n//     } else {\n//        return contacts.filter(({ name }) =>\n//       name.includes(filterStatus)\n//     );\n//     }\n//   }\n// );\n","import React from \"react\";\nimport { ContactsUl, ContactItem } from \"./ContactList.styled\"\nimport Contact from \"../Contact/Contact\"\nimport { selectContacts, selectFilter } from '../../redux/selectors'\nimport { useSelector} from \"react-redux\"\n\n\n\nfunction ContactList() {\n    const contacts = useSelector(selectContacts)\n    const filterStatus = useSelector(selectFilter)\n    // const visible = useSelector(selectVisibleContacts)\n    const visibleContacts = contacts.filter((contact) => contact.name.toLowerCase().includes(filterStatus.toLowerCase()))\n    console.log(visibleContacts)\n\n    return (\n            <ContactsUl>\n                {visibleContacts.map(contact  => (\n                <ContactItem key={contact.id}>\n                    <Contact contact={contact}  />    \n                </ContactItem>    \n                ))}\n            </ContactsUl>\n        )\n    \n\n}\n\n\nexport default ContactList","import styled from \"styled-components\";\n\nexport const Label = styled.label`\ndisplay:flex;\nflex-direction: column;\nmargin-bottom: 16px;\nfont-size: 18px;\n`","import styled from \"styled-components\";\n\nexport const Form = styled.form`\ndisplay: flex;\nflex-direction: column;\n`\nexport const Label = styled.label`\ndisplay: flex;\nflex-direction: column;\nfont-size: 18px;\nmargin-bottom: 16px\n`\n\nexport const Input = styled.input`\nwidth: 250px;\nheight: 30px;\nborder-radius: 5px;\nmargin-top: 8px;\nfont-size: 16px;\n&:hover {\n    border-color: blue;\n}\n`\nexport const Button = styled.button`\nwidth: 150px;\nheight: 30px;\nborder-radius: 5px;\nborder:none;\nbackground-color: lightblue;\nfont-size: 16px;\n&:hover{\n    background-color: blue;\n    color: white;\n}\n`","import React from \"react\";\nimport { Label } from \"./Filter.styled\"\nimport { Input } from \"../ContactsForm/ContactForm.styled\"\nimport { useDispatch } from \"react-redux\"\nimport { setFilter } from \"../../redux/filterSlice\"\n\n\n\nexport const Filter = () => {\n    const dispatch = useDispatch()\n        \n    const filterChangeHandler = (event) => {\n        dispatch(setFilter(event.target.value))\n    }\n\n\n    return <Label>\n        Find contacts by name\n        <Input\n            type=\"text\"\n            name=\"filter\"\n            onChange={filterChangeHandler}\n        />\n        </Label>\n}\n\n","\nimport React from \"react\";\nimport { Form, Label, Input, Button } from \"./ContactForm.styled\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { addContact } from \"../../redux/operations\"\nimport { selectContacts } from \"redux/selectors\";\n\nconst ContactsForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts)\n\n  \n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const form = event.target;\n    const newContact = {\n      name: form.elements.name.value,\n      number: form.elements.number.value\n    }\n    \n    if (contacts.find(contact => contact.name === newContact.name)) {\n      alert(`${newContact.name} is already in contacts`);\n      form.reset();\n      return;\n    }\n    \n      dispatch(addContact(newContact))\n      form.reset();\n      \n    }\n      \n    return (\n      <Form onSubmit={handleSubmit}>\n        <Label>\n          Name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </Label>\n        <Label>\n          Number\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </Label>\n        <Button type=\"submit\">Add contact</Button>\n      </Form>\n    )\n    \n  }\n\nexport default ContactsForm\n\n","import styled from \"styled-components\";\n\nexport const Section = styled.section`\nwidth: 480px;\npadding: 8px;\n`\nexport const Container = styled.div`\ndisplay: flex;\nflex-direction: column;\nmargin-bottom: 8px;\n`\n\nexport const Title = styled.h2`\nfont-size: 24px;\n`","import  ContactList  from \"../components/ContactList/ContactList\"\nimport { Filter } from \"../components/Filter/Filter\"\nimport ContactsForm from \"../components/ContactsForm/ContactsForm\"\nimport { Section, Container, Title } from \"../components/section.styled\"\nimport { Outlet } from 'react-router-dom'\nimport { useDispatch } from \"react-redux\"\nimport { useEffect } from \"react\"\nimport { fetchContacts } from \"redux/operations\"\n// import { useSelector } from 'react-redux';\n// import { authSelectors } from 'redux/auth';\n\n\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n// const isLoggedIn = useSelector(authSelectors.selectIsLoggedIn)\n  return (\n    <Section>\n        <Container>\n          <Title>Phonebook</Title>\n          <ContactsForm/>\n        </Container>\n        <Container>\n        <Title>Contacts</Title>\n          {/* {isLoading && <p>Loading tasks...</p>} */}\n          {/* {error && <p>{error}</p>} */}\n          <Filter />\n          <ContactList />\n          \n      </Container>\n      <Outlet />\n    </Section>\n    \n  )\n}\n\n"],"names":["ContactsUl","styled","ContactItem","ContactBox","Button","Span","contact","dispatch","useDispatch","name","number","type","onClick","deleteContact","id","selectContacts","state","contacts","items","selectFilter","filter","useSelector","filterStatus","visibleContacts","toLowerCase","includes","console","log","map","Label","Form","Input","Filter","onChange","event","setFilter","target","value","onSubmit","preventDefault","form","newContact","elements","find","alert","reset","addContact","pattern","title","required","Section","Container","Title","Contacts","useEffect","fetchContacts"],"sourceRoot":""}